apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    //所以compileSdkVersion决定了编译期间能否使用新版本的API。targetSDKVersion决定了运行期间使用哪种特性。
    compileSdkVersion 28
    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        applicationId "com.zenglb.cameraxfragment"
        minSdkVersion 21
        //targetSdkVersion<=28，分区存储功能就不会开启
        targetSdkVersion 28 //先不适配存储分区了，有需要请提PR 吧
        versionCode 1
        versionName "1.0.0"
    }

    compileOptions {
        sourceCompatibility rootProject.ext.java_version
        targetCompatibility rootProject.ext.java_version
    }

    kotlinOptions {
        jvmTarget = rootProject.ext.java_version
    }

    androidExtensions {
        experimental = true
    }

    signingConfigs {
        myAppConfig {
            storeFile file('/Users/zlb/KeyStore')
            storePassword 'Android2021'
            keyPassword 'Android2021'
            keyAlias 'key_zlb'
        }
    }

    buildTypes {
        debug {

        }

        release {
            signingConfig signingConfigs.myAppConfig
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    implementation project(':camerax')
//    implementation "io.github.anylifezlb:CameraXFragment:1.1.4"


//     // PictureSelector 基础 (必须)
//    implementation 'io.github.lucksiege:pictureselector:v3.0.3'
//     // 图片压缩 (按需引入)
//    implementation 'io.github.lucksiege:compress:v3.0.3'
//     // 图片裁剪 (按需引入)
//    implementation 'io.github.lucksiege:ucrop:v3.0.3'



    implementation "androidx.camera:camera-camera2:1.1.0-alpha04"
    implementation 'androidx.camera:camera-view:1.0.0-alpha24'

    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation "com.zhihu.android:matisse:0.5.3-beta3"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'


    // Unit testing
    testImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'androidx.test:rules:1.3.0'
    testImplementation 'androidx.test:runner:1.3.0'
    testImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation 'org.robolectric:robolectric:4.4'

    // Instrumented  testing
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'




}

repositories {
    flatDir {
        dirs 'aars'
    }
}